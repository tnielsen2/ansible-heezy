name: Triggered Deployment

on:
  push:
    branches: [main]
    paths:
      - 'inventory/**'
      - 'roles/baseline/**'
      - 'roles/prometheus/**'
      - 'roles/github-runner/**'
      - 'playbooks/baseline.yml'
      - 'playbooks/prometheus.yml'
      - 'playbooks/github-runner.yml'
      - '.github/workflows/triggered.yml'
  workflow_dispatch:
    inputs:
      playbook:
        description: 'Playbook to run'
        required: false
        type: choice
        options:
          - all
          - baseline
          - prometheus
          - github-runner
        default: all

permissions:
  id-token: write
  contents: read

concurrency:
  group: ansible-deployment
  cancel-in-progress: false

jobs:
  build:
    if: github.event_name == 'push'
    uses: ./.github/workflows/_build-ecr.yml
    with:
      tag: ${{ github.ref_name }}
    secrets: inherit

  setup-aws:
    uses: ./.github/workflows/_setup-runner-aws-credentials.yml
    with:
      runner-type: ubuntu-latest
    secrets: inherit

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      baseline: ${{ steps.changes.outputs.baseline }}
      prometheus: ${{ steps.changes.outputs.prometheus }}
      github-runner: ${{ steps.changes.outputs.github-runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            baseline:
              - 'inventory/**'
              - 'roles/baseline/**'
              - 'playbooks/baseline.yml'
            prometheus:
              - 'inventory/**'
              - 'roles/prometheus/**'
              - 'playbooks/prometheus.yml'
            github-runner:
              - 'inventory/**'
              - 'roles/github-runner/**'
              - 'playbooks/github-runner.yml'

  deploy:
    needs: [setup-aws, detect-changes]
    if: always() && !cancelled() && !failure()
    runs-on: self-hosted
    timeout-minutes: 60
    strategy:
      matrix:
        playbook: [
          { name: "baseline", condition: "${{ needs.detect-changes.outputs.baseline == 'true' || github.event.inputs.playbook == 'all' || github.event.inputs.playbook == 'baseline' }}" },
          { name: "prometheus", condition: "${{ needs.detect-changes.outputs.prometheus == 'true' || github.event.inputs.playbook == 'all' || github.event.inputs.playbook == 'prometheus' }}" },
          { name: "github-runner", condition: "${{ needs.detect-changes.outputs.github-runner == 'true' || github.event.inputs.playbook == 'all' || github.event.inputs.playbook == 'github-runner' }}" }
        ]
      fail-fast: false
    if: |
      always() && !cancelled() && !failure() && (
        github.event_name == 'workflow_dispatch' ||
        needs.detect-changes.outputs.baseline == 'true' ||
        needs.detect-changes.outputs.prometheus == 'true' ||
        needs.detect-changes.outputs.github-runner == 'true'
      )
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials for runner
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}:role/GitHubActions-MultiRepo
          aws-region: us-east-2
      
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Run ${{ matrix.playbook.name }} playbook
        if: ${{ matrix.playbook.condition }}
        run: |
          .github/scripts/run-ansible.sh ${{ matrix.playbook.name }} inventory/hosts.heezy "" ${{ needs.setup-aws.outputs.runner-access-key }} ${{ needs.setup-aws.outputs.runner-secret-key }} ${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}
