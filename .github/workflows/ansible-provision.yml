name: Ansible Provision

on:
  workflow_dispatch:
    inputs:
      target_hosts:
        description: 'Target hosts (comma-separated)'
        required: true
        type: string
      linux_host:
        description: 'Linux host IP'
        required: false
        type: string
      windows_host:
        description: 'Windows host IP'
        required: false
        type: string
      playbook:
        description: 'Playbook to run'
        required: true
        type: choice
        options:
          - vm-bootstrap
          - custom-role
          - infrastructure
        default: vm-bootstrap
      custom_role:
        description: 'Custom role name (if playbook=custom-role)'
        required: false
        type: choice
        options:
          - minecraft-server
          - web-server

      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - prod
        default: prod

jobs:
  get-runner-credentials:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      runner-access-key: ${{ steps.get-creds.outputs.access-key }}
      runner-secret-key: ${{ steps.get-creds.outputs.secret-key }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}:role/GitHubActions-MultiRepo
          aws-region: us-east-2

      - name: Get runner credentials from AWS Secrets
        id: get-creds
        run: |
          CREDS=$(aws secretsmanager get-secret-value --secret-id production/heezy/github_runner/aws_credentials --query SecretString --output text)
          echo "access-key=$(echo $CREDS | jq -r '.AWS_ACCESS_KEY_ID')" >> $GITHUB_OUTPUT
          echo "secret-key=$(echo $CREDS | jq -r '.AWS_SECRET_ACCESS_KEY')" >> $GITHUB_OUTPUT

  provision:
    needs: get-runner-credentials
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      

      
      - name: Create inventory
        run: |
          mkdir -p inventory
          echo "[linux]" > inventory/hosts
          if [ -n "${{ inputs.linux_host }}" ]; then
            echo "${{ inputs.linux_host }}" >> inventory/hosts
          fi
          echo "" >> inventory/hosts
          echo "[windows]" >> inventory/hosts
          if [ [ -n "${{ inputs.windows_host }}" ]; then
            echo "${{ inputs.windows_host }}" >> inventory/hosts
          fi
          echo "" >> inventory/hosts
          echo "[all:vars]" >> inventory/hosts
          echo "ansible_user=admin" >> inventory/hosts
          echo "ansible_ssh_private_key_file=/ansible/keys/id_rsa" >> inventory/hosts
      
      - name: Run VM Bootstrap
        if: inputs.playbook == 'vm-bootstrap'
        run: |
          chmod +x .github/scripts/run-ansible.sh
          .github/scripts/run-ansible.sh linux-setup inventory/hosts "" ${{ needs.get-runner-credentials.outputs.runner-access-key }} ${{ needs.get-runner-credentials.outputs.runner-secret-key }} ${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}
      
      - name: Run Custom Role
        if: inputs.playbook == 'custom-role'
        run: |
          chmod +x .github/scripts/run-ansible.sh
          .github/scripts/run-ansible.sh custom-role inventory/hosts "CUSTOM_ROLE=${{ inputs.custom_role }}" ${{ needs.get-runner-credentials.outputs.runner-access-key }} ${{ needs.get-runner-credentials.outputs.runner-secret-key }} ${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}
      
      - name: Run Infrastructure Setup
        if: inputs.playbook == 'infrastructure'
        run: |
          chmod +x .github/scripts/run-ansible.sh
          .github/scripts/run-ansible.sh infrastructure inventory/hosts "" ${{ needs.get-runner-credentials.outputs.runner-access-key }} ${{ needs.get-runner-credentials.outputs.runner-secret-key }} ${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}
