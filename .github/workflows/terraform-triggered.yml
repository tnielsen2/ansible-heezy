name: Terraform Provisioning

on:
  workflow_dispatch:
inputs:
      target_hosts:
        description: 'Target hosts (comma-separated IPs or inventory group)'
        required: true
        type: string
      playbook:
        description: 'Playbook to execute'
        required: true
        type: choice
        options:
          - baseline
          - prometheus
          - tailscale
        default: baseline
      custom_role:
        description: 'Custom role (if playbook is custom-role)'
        required: false
        type: choice
        options:
          - github-runner

permissions:
  id-token: write
  contents: read

jobs:
  setup-aws:
    uses: ./.github/workflows/_setup-runner-aws-credentials.yml
    with:
      runner-type: ubuntu-latest
    secrets: inherit

  provision:
    needs: setup-aws
    runs-on: self-hosted
    container:
      image: 025066240222.dkr.ecr.us-east-2.amazonaws.com/ansible-automation:latest
      credentials:
        username: AWS
        password: ${{ needs.setup-aws.outputs.ecr-token }}
    timeout-minutes: 60
    steps:
      - name: Run playbook
        env:
          AWS_ACCESS_KEY_ID: ${{ needs.setup-aws.outputs.runner-access-key }}
          AWS_SECRET_ACCESS_KEY: ${{ needs.setup-aws.outputs.runner-secret-key }}
          AWS_DEFAULT_REGION: us-east-2
        run: |
          # Assume role using static runner credentials
          CREDS=$(aws sts assume-role --role-arn arn:aws:iam::025066240222:role/GitHubActions-MultiRepo --role-session-name ansible-session)
          
          # Export assumed role credentials
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')
          
          # Set extra vars
          EXTRA_VARS=""
          if [ "${{ github.event.inputs.playbook }}" = "custom-role" ] && [ -n "${{ github.event.inputs.custom_role }}" ]; then
            EXTRA_VARS="--extra-vars custom_role=${{ github.event.inputs.custom_role }}"
          fi
          
          # Run Ansible with assumed role credentials
          ANSIBLE_CONFIG=/ansible/ansible.cfg ANSIBLE_ROLES_PATH=/ansible/roles ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i /ansible/inventory/hosts.heezy /ansible/playbooks/${{ github.event.inputs.playbook }}.yml $EXTRA_VARS
