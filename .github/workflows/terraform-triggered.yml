name: Infrastructure Provisioning

on:
  workflow_dispatch:
    inputs:
      target_hosts:
        description: 'Target hosts (comma-separated IPs or inventory group)'
        required: true
        type: string
      playbook:
        description: 'Playbook to execute'
        required: true
        type: choice
        options:
          - baseline
          - prometheus
          - tailscale
        default: baseline
      custom_role:
        description: 'Custom role (if playbook is custom-role)'
        required: false
        type: choice
        options:
          - github-runner
        default: minecraft-server
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - prod
        default: prod
      tailscale_auth_key:
        description: 'Tailscale auth key (optional)'
        required: false
        type: string
      use_inventory:
        description: 'Use existing inventory instead of dynamic hosts'
        required: false
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  setup-aws:
    uses: ./.github/workflows/_setup-runner-aws-credentials.yml
    with:
      runner-type: ubuntu-latest
    secrets: inherit

  provision:
    needs: setup-aws
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}:role/GitHubActions-MultiRepo
          aws-region: us-east-2
      
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Determine inventory
        id: inventory
        run: |
          if [ "${{ github.event.inputs.use_inventory }}" = "true" ]; then
            echo "inventory=inventory/hosts.heezy" >> $GITHUB_OUTPUT
          else
            mkdir -p inventory
            echo "[all]" > inventory/dynamic_hosts
            IFS=',' read -ra HOSTS <<< "${{ github.event.inputs.target_hosts }}"
            for host in "${HOSTS[@]}"; do
              echo "$host" >> inventory/dynamic_hosts
            done
            echo "" >> inventory/dynamic_hosts
            echo "[all:vars]" >> inventory/dynamic_hosts
            echo "ansible_user={{ lookup('aws_secret', 'production/heezy/ubuntu/cloud-init-credentials', region='us-east-2') | from_json | json_query('username') }}" >> inventory/dynamic_hosts
            echo "ansible_password={{ lookup('aws_secret', 'production/heezy/ubuntu/cloud-init-credentials', region='us-east-2') | from_json | json_query('password') }}" >> inventory/dynamic_hosts
            echo "inventory=inventory/dynamic_hosts" >> $GITHUB_OUTPUT
          fi
          
      - name: Run Ansible playbook
        run: |
          chmod +x .github/scripts/run-ansible.sh >/dev/null 2>&1
          EXTRA_VARS=""
          if [ "${{ github.event.inputs.playbook }}" = "custom-role" ]; then
            EXTRA_VARS="CUSTOM_ROLE=${{ github.event.inputs.custom_role }}"
          fi
          if [ -n "${{ github.event.inputs.tailscale_auth_key }}" ]; then
            EXTRA_VARS="${EXTRA_VARS} TAILSCALE_AUTH_KEY=${{ github.event.inputs.tailscale_auth_key }}"
          fi
          .github/scripts/run-ansible.sh ${{ github.event.inputs.playbook }} ${{ steps.inventory.outputs.inventory }} "$EXTRA_VARS" ${{ needs.setup-aws.outputs.runner-access-key }} ${{ needs.setup-aws.outputs.runner-secret-key }} ${{ secrets.PROD_AWS_ACCOUNT_NUMBER }}
