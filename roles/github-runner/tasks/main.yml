---
- name: Get GitHub tokens from AWS Secrets Manager
  set_fact:
    terraform_heezy_token: "{{ lookup('aws_secret', 'production/heezy/github/ansible-terraform-runner-token', region='us-east-2') | from_json | json_query('token') }}"
    ansible_heezy_token: "{{ lookup('aws_secret', 'production/heezy/github/ansible-heezy-runner-token', region='us-east-2') | from_json | json_query('token') }}"

- name: Update package cache
  apt:
    update_cache: yes

- name: Install required packages
  apt:
    name:
      - curl
      - wget
      - unzip
      - jq
      - git
      - gpg
      - lsb-release
      - ca-certificates
      - gnupg
      - software-properties-common
      - apt-transport-https
    state: present

- name: Install AWS CLI
  block:
    - name: Download AWS CLI
      get_url:
        url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: "/tmp/awscliv2.zip"
    - name: Extract AWS CLI
      unarchive:
        src: "/tmp/awscliv2.zip"
        dest: "/tmp"
        remote_src: yes
    - name: Install AWS CLI
      command: /tmp/aws/install
      args:
        creates: /usr/local/bin/aws

- name: Install Docker
  block:
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

- name: Install GitHub CLI
  block:
    - name: Add GitHub CLI GPG key
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        keyring: /usr/share/keyrings/githubcli-archive-keyring.gpg
        state: present
    - name: Add GitHub CLI repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
        state: present
    - name: Install GitHub CLI
      apt:
        name: gh
        state: present
        update_cache: yes

- name: Install Terraform
  block:
    - name: Download HashiCorp GPG key
      get_url:
        url: https://apt.releases.hashicorp.com/gpg
        dest: /tmp/hashicorp.gpg
    - name: Add HashiCorp GPG key
      command: gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg /tmp/hashicorp.gpg
      args:
        creates: /usr/share/keyrings/hashicorp-archive-keyring.gpg
    - name: Add HashiCorp repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present
    - name: Install Terraform
      apt:
        name: terraform
        state: present
        update_cache: yes

- name: Create runner user
  user:
    name: runner
    shell: /bin/bash
    create_home: yes
    groups: 
      - sudo
      - docker

- name: Create actions-runner directories
  file:
    path: "{{ item }}"
    state: directory
    owner: runner
    group: runner
    mode: '0755'
  loop:
    - /home/runner/actions-runner-terraform
    - /home/runner/actions-runner-ansible

- name: Download GitHub Actions runner
  get_url:
    url: "https://github.com/actions/runner/releases/download/v2.327.1/actions-runner-linux-x64-2.327.1.tar.gz"
    dest: "/tmp/actions-runner.tar.gz"

- name: Extract GitHub Actions runner for terraform repo
  unarchive:
    src: "/tmp/actions-runner.tar.gz"
    dest: /home/runner/actions-runner-terraform
    owner: runner
    group: runner
    remote_src: yes

- name: Extract GitHub Actions runner for ansible repo
  unarchive:
    src: "/tmp/actions-runner.tar.gz"
    dest: /home/runner/actions-runner-ansible
    owner: runner
    group: runner
    remote_src: yes

- name: Get terraform-heezy registration token
  uri:
    url: "https://api.github.com/repos/tnielsen2/terraform-heezy/actions/runners/registration-token"
    method: POST
    headers:
      Authorization: "Bearer {{ terraform_heezy_token }}"
      Accept: "application/vnd.github.v3+json"
    status_code: 201
  register: terraform_token_response

- name: Get ansible-heezy registration token
  uri:
    url: "https://api.github.com/repos/tnielsen2/ansible-heezy/actions/runners/registration-token"
    method: POST
    headers:
      Authorization: "Bearer {{ ansible_heezy_token }}"
      Accept: "application/vnd.github.v3+json"
    status_code: 201
  register: ansible_token_response

- name: Configure terraform-heezy runner
  command: >
    ./config.sh --url https://github.com/tnielsen2/terraform-heezy
    --token {{ terraform_token_response.json.token }}
    --name heezy-terraform-runner
    --labels self-hosted,linux,x64,terraform
    --unattended
  args:
    chdir: /home/runner/actions-runner-terraform
  become_user: runner

- name: Configure ansible-heezy runner
  command: >
    ./config.sh --url https://github.com/tnielsen2/ansible-heezy
    --token {{ ansible_token_response.json.token }}
    --name heezy-ansible-runner
    --labels self-hosted,linux,x64,ansible
    --unattended
  args:
    chdir: /home/runner/actions-runner-ansible
  become_user: runner

- name: Install terraform runner service
  command: ./svc.sh install
  args:
    chdir: /home/runner/actions-runner-terraform

- name: Install ansible runner service
  command: ./svc.sh install
  args:
    chdir: /home/runner/actions-runner-ansible

- name: Start terraform runner service
  command: ./svc.sh start
  args:
    chdir: /home/runner/actions-runner-terraform

- name: Start ansible runner service
  command: ./svc.sh start
  args:
    chdir: /home/runner/actions-runner-ansible
