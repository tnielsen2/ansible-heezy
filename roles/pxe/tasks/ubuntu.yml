#SPDX-License-Identifier: MIT-0
---
- name: Create PXE directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/pxe/tftp
    - /opt/pxe/tftp/pxelinux.cfg
    - /opt/pxe/http
    - /opt/pxe/config
    - /opt/pxe/logs

- name: Create iPXE boot script
  copy:
    content: |
      #!ipxe
      kernel vmlinuz-amd64 talos.platform=metal slab_nomerge pti=on console=tty0 console=ttyS0,115200
      initrd initramfs-amd64.xz
      boot
    dest: /opt/pxe/tftp/boot.ipxe
    mode: '0644'

- name: Copy Talos kernel and initramfs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
  loop:
    - src: "vmlinuz-amd64"
      dest: "/opt/pxe/tftp/vmlinuz-amd64"
    - src: "initramfs-amd64.xz"
      dest: "/opt/pxe/tftp/initramfs-amd64.xz"

- name: Create PXE boot menu
  copy:
    content: |
      DEFAULT menu.c32
      PROMPT 0
      MENU TITLE PXE Boot Menu
      TIMEOUT 300

      LABEL talos
        MENU LABEL Talos Linux
        KERNEL vmlinuz-amd64
        APPEND initrd=initramfs-amd64.xz talos.platform=metal slab_nomerge pti=on console=tty0 console=ttyS0,115200
        TEXT HELP
        Boot Talos Linux in maintenance mode
        ENDTEXT
    dest: /opt/pxe/tftp/pxelinux.cfg/default
    mode: '0644'

- name: Create docker-compose for PXE server
  copy:
    content: |
      services:
        pxe-server:
          image: ferrarimarco/pxe
          container_name: pxe-server
          restart: unless-stopped
          network_mode: host
          cap_add:
            - NET_ADMIN
          volumes:
            - /opt/pxe/tftp:/var/lib/tftpboot
            - /opt/pxe/http:/var/www/html
            - /opt/pxe/logs:/var/log/pxe
          environment:
            - DISABLE_DHCP=true
            - PXE_PROMPT_TIMEOUT=10
            - PXE_DEFAULT_ENTRY=talos
          ports:
            - "69:69/udp"
            - "80:80/tcp"
          logging:
            driver: "json-file"
            options:
              max-size: "10m"
              max-file: "3"
    dest: /opt/pxe/docker-compose.yml
    mode: '0644'

- name: Create systemd service for PXE server
  copy:
    content: |
      [Unit]
      Description=PXE Boot Server
      Requires=docker.service
      After=docker.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      WorkingDirectory=/opt/pxe
      ExecStart=/usr/bin/docker compose up -d
      ExecStop=/usr/bin/docker compose down
      TimeoutStartSec=0

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/pxe-server.service
    mode: '0644'
  notify: reload systemd

- name: Create log rotation config
  copy:
    content: |
      /opt/pxe/logs/*.log {
        daily
        rotate 7
        compress
        delaycompress
        missingok
        notifempty
        create 644 root root
      }
    dest: /etc/logrotate.d/pxe-server
    mode: '0644'

- name: Create cleanup script
  copy:
    content: |
      #!/bin/bash
      # Clean up old PXE logs and temporary files
      find /opt/pxe/logs -name "*.log" -mtime +7 -delete
      find /tmp -name "*pxe*" -mtime +1 -delete
      docker system prune -f --filter "until=24h"
    dest: /opt/pxe/cleanup.sh
    mode: '0755'

- name: Create cleanup cron job
  cron:
    name: "PXE server cleanup"
    minute: "0"
    hour: "2"
    job: "/opt/pxe/cleanup.sh"

- name: Start and enable PXE server service
  systemd:
    name: pxe-server
    state: started
    enabled: yes
    daemon_reload: yes

- name: Configure firewall for PXE services
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  loop:
    - { port: "69", proto: "udp" }
    - { port: "80", proto: "tcp" }
